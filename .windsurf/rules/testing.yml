# Windsurf Testing Rules
version: 1.0

description: Comprehensive testing standards for backend, frontend, and end-to-end testing practices

rules:
  - name: philosophy
    description: Testing philosophy
    applies_to: "**/*.test.{js,jsx,ts,tsx,py},test_*.py,**/tests/**/*"
    always_apply: true
    content: |
      - Update tests to match intended implementation unless:
        1. Implementation is clearly wrong
        2. Security risk exists
        3. Test reflects documented requirements

  - name: general_standards
    description: General testing standards
    content: |
      - Test all critical functionality
      - Always pass before production
      - Consider different environments
      - Only mock data for tests

  - name: backend
    description: Backend testing standards
    content: |
      - Use pytest with fixtures
      - Separate test database
      - Test all API endpoints
      - Mock external dependencies
      - Use parameterized tests
      - Leverage existing fixtures

  - name: frontend
    description: Frontend testing standards
    content: |
      - Use React Testing Library
      - Test user behavior, not implementation
      - Mock API calls (prefer MSW)
      - Test critical user flows
      - Test accessibility
      - Provide necessary contexts
      - Use snapshot testing sparingly

  - name: organization
    description: Test organization
    content: |
      - Group related tests
      - Use descriptive names
      - Follow AAA pattern
      - Backend: `tests/` mirrors `app/`
      - Frontend: Co-locate test files

  - name: coverage
    description: Test coverage standards
    content: |
      - 80%+ on core features
      - Test edge cases
      - Include positive/negative tests
      - Performance tests for critical ops

  - name: test_data
    description: Test data management
    content: |
      - Backend: Use factory_boy
      - Frontend: Mock data helpers
      - Clean up after tests
      - Use realistic anonymized data
      - Minimal sufficient data

  - name: api_testing
    description: API testing standards
    content: |
      - Test all HTTP methods
      - Verify status codes
      - Test validation/errors
      - Test auth for protected endpoints
      - Validate response schemas

  - name: e2e
    description: End-to-end testing
    content: |
      - Use Playwright
      - Test critical user journeys
      - Cross-browser/device tests
      - Test with different user roles

  - name: performance
    description: Performance testing
    content: |
      - Load test critical APIs
      - Test query performance
      - Monitor memory usage
      - Benchmark critical ops

  - name: security_testing
    description: Security testing
    content: |
      - Test auth mechanisms
      - Verify input validation
      - Test for common vulnerabilities
      - Test rate limiting
      - Verify no sensitive data exposure

  - name: ci
    description: CI standards
    content: |
      - All tests pass before merge
      - Run on every PR
      - Include linting/quality checks
      - Run security scans
      - Publish coverage reports

  - name: maintenance
    description: Test maintenance
    content: |
      - Regularly review/update tests
      - Remove obsolete tests
      - Refactor for maintainability
      - Keep test deps updated
      - Document complex scenarios
