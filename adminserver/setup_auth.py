#!/usr/bin/env python3
"""
Setup script for Kanakku Monitoring Dashboard Authentication

This script helps set up the initial authentication configuration.
"""

import getpass
import os
import secrets
import sys
from pathlib import Path

from auth import create_htpasswd_file
from config.dashboard_config import get_config


def generate_secret_key() -> str:
    """Generate a secure secret key."""
    return secrets.token_urlsafe(32)


def setup_environment_file():
    """Create or update environment file with secure settings."""
    env_file = Path(".env")

    print("🔧 Setting up environment configuration...")

    # Generate secure secret key
    secret_key = generate_secret_key()

    env_content = f"""# Kanakku Monitoring Dashboard Configuration
# Generated by setup_auth.py

# Security
DASHBOARD_SECRET_KEY={secret_key}

# Authentication
DASHBOARD_HTPASSWD_FILE=./config/dashboard.htpasswd
DASHBOARD_AUTH_REALM=Kanakku Monitoring Dashboard
DASHBOARD_SESSION_TIMEOUT=3600

# Logging
DASHBOARD_LOG_LEVEL=INFO

# Environment
FLASK_ENV=development
"""

    if env_file.exists():
        backup_file = env_file.with_suffix(".env.backup")
        print(f"📁 Backing up existing .env to {backup_file}")
        env_file.rename(backup_file)

    env_file.write_text(env_content)
    print(f"✅ Environment file created: {env_file}")
    print("⚠️  Remember to set FLASK_ENV=production in production!")


def setup_htpasswd_file():
    """Set up the initial htpasswd file with admin user."""
    config = get_config()
    htpasswd_file = config.HTPASSWD_FILE

    print(f"🔐 Setting up htpasswd file: {htpasswd_file}")

    # Create directory if it doesn't exist
    htpasswd_path = Path(htpasswd_file)
    htpasswd_path.parent.mkdir(parents=True, exist_ok=True)

    # Get admin credentials
    print("\n📝 Creating initial admin user...")
    username = input("Enter admin username [admin]: ").strip() or "admin"

    password = getpass.getpass("Enter admin password: ")
    if not password:
        print("❌ Password cannot be empty!")
        return False

    confirm_password = getpass.getpass("Confirm admin password: ")
    if password != confirm_password:
        print("❌ Passwords do not match!")
        return False

    # Create htpasswd file
    success = create_htpasswd_file(htpasswd_file, username, password)

    if success:
        print(f"✅ Admin user '{username}' created successfully!")

        # Set secure permissions
        try:
            os.chmod(htpasswd_file, 0o600)
            print(f"🔒 Set secure permissions (600) on {htpasswd_file}")
        except OSError as e:
            print(f"⚠️  Could not set permissions: {e}")

        return True
    else:
        print("❌ Failed to create admin user!")
        return False


def check_dependencies():
    """Check if required dependencies are installed."""
    print("🔍 Checking dependencies...")

    required_packages = [
        ("flask", "Flask"),
        ("flask_cors", "Flask-CORS"),
        ("passlib", "passlib"),
        ("bcrypt", "bcrypt"),
    ]

    missing_packages = []

    for package, display_name in required_packages:
        try:
            __import__(package)
            print(f"  ✅ {display_name}")
        except ImportError:
            print(f"  ❌ {display_name}")
            missing_packages.append(display_name)

    if missing_packages:
        print(f"\n❌ Missing packages: {', '.join(missing_packages)}")
        print('📦 Install them with: pip install -e ".[dev]" (from project root)')
        return False

    print("✅ All dependencies are installed!")
    return True


def main():
    """Main setup function."""
    print("🚀 Kanakku Monitoring Dashboard Authentication Setup")
    print("=" * 50)

    # Check dependencies first
    if not check_dependencies():
        return 1

    print("\n" + "=" * 50)

    # Setup environment file
    setup_env = input("Set up environment file (.env)? [Y/n]: ").strip().lower()
    if setup_env != "n":
        setup_environment_file()

    print("\n" + "=" * 50)

    # Setup htpasswd file
    setup_htpasswd = (
        input("Set up htpasswd file with admin user? [Y/n]: ").strip().lower()
    )
    if setup_htpasswd != "n":
        if not setup_htpasswd_file():
            return 1

    print("\n" + "=" * 50)
    print("🎉 Setup completed successfully!")
    print("\n📋 Next steps:")
    print("1. Review the generated .env file")
    print("2. Start the dashboard: python web_dashboard.py")
    print("3. Access the dashboard at http://localhost:5001")
    print("4. Log in with your admin credentials")
    print("\n🔧 To manage users later, use: python manage_users.py")
    print("📚 For production deployment, see the documentation")

    return 0


if __name__ == "__main__":
    sys.exit(main())
